"""post separated to Post and PostReply

Revision ID: 4dcf735e6e6d
Revises: 859ecc97ce40
Create Date: 2025-03-07 05:44:43.368923

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4dcf735e6e6d"
down_revision: Union[str, None] = "859ecc97ce40"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "post_replies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("author", sa.String(length=200), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.Column("images", sa.JSON(), nullable=True),
        sa.Column("views", sa.JSON(), nullable=True),
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("parent_reply_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["author"], ["users.username"], name="fk_post_replies_author_users"
        ),
        sa.ForeignKeyConstraint(
            ["parent_reply_id"],
            ["post_replies.id"],
            name="fk_post_replies_parent_reply_id_post_replies",
        ),
        sa.ForeignKeyConstraint(
            ["post_id"], ["posts.id"], name="fk_post_replies_post_id_posts"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="fk_post_replies_user_id_users"
        ),
        sa.PrimaryKeyConstraint("id", name="pk_post_replies"),
    )

    op.drop_table("android_metadata")

    with op.batch_alter_table("categories", schema=None) as batch_op:
        batch_op.create_unique_constraint("uq_categories_name", ["name"])

    with op.batch_alter_table("chats", schema=None) as batch_op:
        batch_op.create_unique_constraint("uq_chats_url_name", ["url_name"])

    with op.batch_alter_table("posts", schema=None) as batch_op:
        batch_op.add_column(sa.Column("text", sa.Text(), nullable=False))
        batch_op.drop_constraint(
            "fk_posts_post_id_posts", type_="foreignkey"
        )  # Указываем имя существующего ограничения
        batch_op.drop_column("content")
        batch_op.drop_column("post_id")

    with op.batch_alter_table("topics", schema=None) as batch_op:
        batch_op.create_unique_constraint("uq_topics_url_name", ["url_name"])

    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_unique_constraint("uq_users_email", ["email"])
        batch_op.create_unique_constraint("uq_users_username", ["username"])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_constraint("uq_users_username", type_="unique")
        batch_op.drop_constraint("uq_users_email", type_="unique")

    with op.batch_alter_table("topics", schema=None) as batch_op:
        batch_op.drop_constraint("uq_topics_url_name", type_="unique")

    with op.batch_alter_table("posts", schema=None) as batch_op:
        batch_op.add_column(sa.Column("post_id", sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column("content", sa.TEXT(), nullable=False))
        batch_op.create_foreign_key(
            "fk_posts_post_id_posts", "posts", ["post_id"], ["id"]
        )
        batch_op.drop_column("text")

    with op.batch_alter_table("chats", schema=None) as batch_op:
        batch_op.drop_constraint("uq_chats_url_name", type_="unique")

    with op.batch_alter_table("categories", schema=None) as batch_op:
        batch_op.drop_constraint("uq_categories_name", type_="unique")

    op.create_table("android_metadata", sa.Column("locale", sa.TEXT(), nullable=True))

    op.drop_table("post_replies")
    # ### end Alembic commands ##
